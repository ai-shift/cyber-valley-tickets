/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DateOverlapChecker,
  DateOverlapCheckerInterface,
} from "../../contracts/DateOverlapChecker";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialOffest",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BUCKET_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_IN_DAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506040516101853803806101858339818101604052810190602f91906071565b80600081905550506099565b600080fd5b6000819050919050565b6051816040565b8114605b57600080fd5b50565b600081519050606b81604a565b92915050565b6000602082840312156084576083603b565b5b6000609084828501605e565b91505092915050565b60de806100a76000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806312c5502714603757806361a52a36146051575b600080fd5b603d606b565b60405160489190608f565b60405180910390f35b60576071565b60405160629190608f565b60405180910390f35b61010081565b6201518081565b6000819050919050565b6089816078565b82525050565b600060208201905060a260008301846082565b9291505056fea26469706673582212209236a184c0807216d3d8632179e73554acaeceb447a9e560f41c3d442346ebc964736f6c634300081c0033";

type DateOverlapCheckerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DateOverlapCheckerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DateOverlapChecker__factory extends ContractFactory {
  constructor(...args: DateOverlapCheckerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _initialOffest: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_initialOffest, overrides || {});
  }
  override deploy(
    _initialOffest: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_initialOffest, overrides || {}) as Promise<
      DateOverlapChecker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DateOverlapChecker__factory {
    return super.connect(runner) as DateOverlapChecker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DateOverlapCheckerInterface {
    return new Interface(_abi) as DateOverlapCheckerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DateOverlapChecker {
    return new Contract(address, _abi, runner) as unknown as DateOverlapChecker;
  }
}
