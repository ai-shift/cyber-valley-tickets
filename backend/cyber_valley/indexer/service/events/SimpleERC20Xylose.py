# THIS FILE IS AUTO-GENERATED - DO NOT EDIT MANUALLY!
#
# Generated by: python manage.py generate_types
# Source: Contract ABIs in ethereum_artifacts/
#
# To modify this file:
#   1. Update the Solidity contract and recompile
#   2. For field-specific patches (validators), edit `FIELD_PATCHES` at
#      `cyber_valley/indexer/management/commands/generate_types.py`
#   3. For custom validators, edit:
#      cyber_valley/indexer/service/events/patches.py
#   4. Then regenerate with: make -C backend gen-types
#
# See: cyber_valley/indexer/service/events/README.md for details
#
# ruff: noqa: N999


from __future__ import annotations

from typing import Any

from pydantic import BaseModel, ConfigDict, Field


class Approval(BaseModel):
    model_config = ConfigDict(
        frozen=True,
    )
    owner: str
    spender: str
    value: int


class Transfer(BaseModel):
    model_config = ConfigDict(
        frozen=True,
    )
    from_: str = Field(..., alias="from")
    to: str
    value: int


class CyberValleyEvents(BaseModel):
    model_config = ConfigDict(
        frozen=True,
    )
    approval: Approval | None = Field(None, alias="Approval")
    eip712_domain_changed: dict[str, Any] | None = Field(
        None, alias="EIP712DomainChanged"
    )
    transfer: Transfer | None = Field(None, alias="Transfer")
