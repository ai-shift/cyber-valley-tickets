{
    "openapi": "3.0.3",
    "info": {
        "title": "Cyber Valley Tickets API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/logout": {
            "get": {
                "operationId": "api_auth_logout_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    },
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAuthLogoutRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "get": {
                "operationId": "api_auth_refresh_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    },
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAuthRefreshRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/auth/verify": {
            "get": {
                "operationId": "api_auth_verify_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAuthVerifyRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/auth/web3/login/": {
            "get": {
                "operationId": "api_auth_web3_login_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "html",
                                "json"
                            ]
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    },
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAuthWeb3LoginRetrieveErrorResponse400"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAuthWeb3LoginRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "api_auth_web3_login_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "html",
                                "json"
                            ]
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SIWEModelRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SIWEModelRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SIWEModelRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieJWTAuth": []
                    },
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateErrorResponse400"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/auth/web3/nonce/{address}": {
            "get": {
                "operationId": "api_auth_web3_nonce_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "address",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    },
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAuthWeb3NonceRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SIWELogin"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/events/": {
            "get": {
                "operationId": "api_events_list",
                "description": "Available events in the syste",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    },
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiEventsListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoleBasedEvent"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/events/{event_id}/status": {
            "get": {
                "operationId": "api_events_status_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "eventId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiEventsStatusRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tickets": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "redeemed": {
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/events/{event_id}/tickets/{ticket_id}": {
            "get": {
                "operationId": "api_events_tickets_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "eventId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "ticketId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiEventsTicketsRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ticket"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/events/{event_id}/tickets/{ticket_id}/nonce": {
            "get": {
                "operationId": "api_events_tickets_nonce_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "eventId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "ticketId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiEventsTicketsNonceRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "nonce": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/events/{event_id}/tickets/{ticket_id}/nonce/{nonce}": {
            "get": {
                "operationId": "api_events_tickets_nonce_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "eventId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "nonce",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "ticketId",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiEventsTicketsNonceRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/events/{id}/": {
            "get": {
                "operationId": "api_events_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this event.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    },
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiEventsRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatorEvent"
                                },
                                "examples": {
                                    "Default": {}
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/ipfs/events/meta": {
            "put": {
                "operationId": "api_ipfs_events_meta_update",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadEventMetaToIpfsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cid": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "IPFS CID of stored data"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/ipfs/places/meta": {
            "put": {
                "operationId": "api_ipfs_places_meta_update",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadPlaceMetaToIpfsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiIpfsPlacesMetaUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cid": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "IPFS CID of stored data"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/ipfs/tickets/meta": {
            "put": {
                "operationId": "api_ipfs_tickets_meta_update",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadTicketMetaToIpfsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadTicketMetaToIpfsRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadTicketMetaToIpfsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiIpfsTicketsMetaUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cid": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "IPFS CID of ticket NFT"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/ipfs/users/socials": {
            "put": {
                "operationId": "api_ipfs_users_socials_update",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadSocialsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiIpfsUsersSocialsUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cid": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "IPFS CID of stored data"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/notifications/": {
            "get": {
                "operationId": "api_notifications_list",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Notification"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/notifications/{id}/": {
            "get": {
                "operationId": "api_notifications_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/notifications/seen/{notification_id}/": {
            "post": {
                "operationId": "api_notifications_seen_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "notificationId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsSeenCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/places/": {
            "get": {
                "operationId": "api_places_list",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    },
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiPlacesListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EventPlace"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/places/{id}/": {
            "get": {
                "operationId": "api_places_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "maximum": 9223372036854775807,
                            "minimum": -9223372036854775808,
                            "format": "int64"
                        },
                        "description": "A unique value identifying this event place.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    },
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiPlacesRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventPlace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/current/": {
            "get": {
                "operationId": "api_users_current_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiUsersCurrentRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/staff/": {
            "get": {
                "operationId": "api_users_staff_list",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieJWTAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiUsersStaffListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Staff"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApiAuthLogoutRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiAuthRefreshRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiAuthVerifyRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiAuthWeb3LoginCreateAddressErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "address"
                        ],
                        "type": "string",
                        "description": "* `address` - address"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateChainIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "chain_id"
                        ],
                        "type": "string",
                        "description": "* `chain_id` - chain_id"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateDomainErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "domain"
                        ],
                        "type": "string",
                        "description": "* `domain` - domain"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateAddressErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateChainIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateDomainErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateExpirationTimeErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateInvalidBeforeErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateIssuedAtErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateNonceErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateResourcesErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateResourcesINDEXErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateStatementErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateUriErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateVersionErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateSignatureErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/ApiAuthWeb3LoginCreateNonFieldErrorsErrorComponent",
                        "address": "#/components/schemas/ApiAuthWeb3LoginCreateAddressErrorComponent",
                        "chain_id": "#/components/schemas/ApiAuthWeb3LoginCreateChainIdErrorComponent",
                        "domain": "#/components/schemas/ApiAuthWeb3LoginCreateDomainErrorComponent",
                        "expiration_time": "#/components/schemas/ApiAuthWeb3LoginCreateExpirationTimeErrorComponent",
                        "invalid_before": "#/components/schemas/ApiAuthWeb3LoginCreateInvalidBeforeErrorComponent",
                        "issued_at": "#/components/schemas/ApiAuthWeb3LoginCreateIssuedAtErrorComponent",
                        "nonce": "#/components/schemas/ApiAuthWeb3LoginCreateNonceErrorComponent",
                        "resources": "#/components/schemas/ApiAuthWeb3LoginCreateResourcesErrorComponent",
                        "resources.INDEX": "#/components/schemas/ApiAuthWeb3LoginCreateResourcesINDEXErrorComponent",
                        "statement": "#/components/schemas/ApiAuthWeb3LoginCreateStatementErrorComponent",
                        "uri": "#/components/schemas/ApiAuthWeb3LoginCreateUriErrorComponent",
                        "version": "#/components/schemas/ApiAuthWeb3LoginCreateVersionErrorComponent",
                        "signature": "#/components/schemas/ApiAuthWeb3LoginCreateSignatureErrorComponent"
                    }
                }
            },
            "ApiAuthWeb3LoginCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/ApiAuthWeb3LoginCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiAuthWeb3LoginCreateExpirationTimeErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "expiration_time"
                        ],
                        "type": "string",
                        "description": "* `expiration_time` - expiration_time"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateInvalidBeforeErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "invalid_before"
                        ],
                        "type": "string",
                        "description": "* `invalid_before` - invalid_before"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateIssuedAtErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "issued_at"
                        ],
                        "type": "string",
                        "description": "* `issued_at` - issued_at"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "non_field_errors"
                        ],
                        "type": "string",
                        "description": "* `non_field_errors` - non_field_errors"
                    },
                    "code": {
                        "enum": [
                            "invalid",
                            "null"
                        ],
                        "type": "string",
                        "description": "* `invalid` - invalid\n* `null` - null"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateNonceErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "nonce"
                        ],
                        "type": "string",
                        "description": "* `nonce` - nonce"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateResourcesErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "resources"
                        ],
                        "type": "string",
                        "description": "* `resources` - resources"
                    },
                    "code": {
                        "enum": [
                            "not_a_list",
                            "null",
                            "required"
                        ],
                        "type": "string",
                        "description": "* `not_a_list` - not_a_list\n* `null` - null\n* `required` - required"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateResourcesINDEXErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "resources.INDEX"
                        ],
                        "type": "string",
                        "description": "* `resources.INDEX` - resources.INDEX"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateSignatureErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "signature"
                        ],
                        "type": "string",
                        "description": "* `signature` - signature"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateStatementErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "statement"
                        ],
                        "type": "string",
                        "description": "* `statement` - statement"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateUriErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "uri"
                        ],
                        "type": "string",
                        "description": "* `uri` - uri"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ApiAuthWeb3LoginCreateVersionErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "version"
                        ],
                        "type": "string",
                        "description": "* `version` - version"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiAuthWeb3LoginRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiAuthWeb3NonceRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiEventsListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiEventsRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiEventsStatusRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiEventsTicketsNonceRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiEventsTicketsRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiIpfsEventsMetaUpdateCoverErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "cover"
                        ],
                        "type": "string",
                        "description": "* `cover` - cover"
                    },
                    "code": {
                        "enum": [
                            "empty",
                            "invalid",
                            "no_name",
                            "null",
                            "required"
                        ],
                        "type": "string",
                        "description": "* `empty` - empty\n* `invalid` - invalid\n* `no_name` - no_name\n* `null` - null\n* `required` - required"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsEventsMetaUpdateDescriptionErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "description"
                        ],
                        "type": "string",
                        "description": "* `description` - description"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsEventsMetaUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateCoverErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateTitleErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateDescriptionErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateWebsiteErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateSocialsCidErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/ApiIpfsEventsMetaUpdateNonFieldErrorsErrorComponent",
                        "cover": "#/components/schemas/ApiIpfsEventsMetaUpdateCoverErrorComponent",
                        "title": "#/components/schemas/ApiIpfsEventsMetaUpdateTitleErrorComponent",
                        "description": "#/components/schemas/ApiIpfsEventsMetaUpdateDescriptionErrorComponent",
                        "website": "#/components/schemas/ApiIpfsEventsMetaUpdateWebsiteErrorComponent",
                        "socials_cid": "#/components/schemas/ApiIpfsEventsMetaUpdateSocialsCidErrorComponent"
                    }
                }
            },
            "ApiIpfsEventsMetaUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/ApiIpfsEventsMetaUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiIpfsEventsMetaUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "non_field_errors"
                        ],
                        "type": "string",
                        "description": "* `non_field_errors` - non_field_errors"
                    },
                    "code": {
                        "enum": [
                            "invalid",
                            "null"
                        ],
                        "type": "string",
                        "description": "* `invalid` - invalid\n* `null` - null"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsEventsMetaUpdateSocialsCidErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "socials_cid"
                        ],
                        "type": "string",
                        "description": "* `socials_cid` - socials_cid"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsEventsMetaUpdateTitleErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "title"
                        ],
                        "type": "string",
                        "description": "* `title` - title"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsEventsMetaUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ApiIpfsEventsMetaUpdateWebsiteErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "website"
                        ],
                        "type": "string",
                        "description": "* `website` - website"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsPlacesMetaUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiIpfsPlacesMetaUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsPlacesMetaUpdateTitleErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsPlacesMetaUpdateLocationUrlErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/ApiIpfsPlacesMetaUpdateNonFieldErrorsErrorComponent",
                        "title": "#/components/schemas/ApiIpfsPlacesMetaUpdateTitleErrorComponent",
                        "location_url": "#/components/schemas/ApiIpfsPlacesMetaUpdateLocationUrlErrorComponent"
                    }
                }
            },
            "ApiIpfsPlacesMetaUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiIpfsPlacesMetaUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/ApiIpfsPlacesMetaUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiIpfsPlacesMetaUpdateLocationUrlErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "location_url"
                        ],
                        "type": "string",
                        "description": "* `location_url` - location_url"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsPlacesMetaUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "non_field_errors"
                        ],
                        "type": "string",
                        "description": "* `non_field_errors` - non_field_errors"
                    },
                    "code": {
                        "enum": [
                            "invalid",
                            "null"
                        ],
                        "type": "string",
                        "description": "* `invalid` - invalid\n* `null` - null"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsPlacesMetaUpdateTitleErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "title"
                        ],
                        "type": "string",
                        "description": "* `title` - title"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsPlacesMetaUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiIpfsPlacesMetaUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ApiIpfsTicketsMetaUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiIpfsTicketsMetaUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsTicketsMetaUpdateSocialsNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsTicketsMetaUpdateSocialsNetworkErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsTicketsMetaUpdateSocialsValueErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsTicketsMetaUpdateEventidErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/ApiIpfsTicketsMetaUpdateNonFieldErrorsErrorComponent",
                        "socials.non_field_errors": "#/components/schemas/ApiIpfsTicketsMetaUpdateSocialsNonFieldErrorsErrorComponent",
                        "socials.network": "#/components/schemas/ApiIpfsTicketsMetaUpdateSocialsNetworkErrorComponent",
                        "socials.value": "#/components/schemas/ApiIpfsTicketsMetaUpdateSocialsValueErrorComponent",
                        "eventid": "#/components/schemas/ApiIpfsTicketsMetaUpdateEventidErrorComponent"
                    }
                }
            },
            "ApiIpfsTicketsMetaUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiIpfsTicketsMetaUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/ApiIpfsTicketsMetaUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiIpfsTicketsMetaUpdateEventidErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "eventid"
                        ],
                        "type": "string",
                        "description": "* `eventid` - eventid"
                    },
                    "code": {
                        "enum": [
                            "invalid",
                            "max_string_length",
                            "null",
                            "required"
                        ],
                        "type": "string",
                        "description": "* `invalid` - invalid\n* `max_string_length` - max_string_length\n* `null` - null\n* `required` - required"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsTicketsMetaUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "non_field_errors"
                        ],
                        "type": "string",
                        "description": "* `non_field_errors` - non_field_errors"
                    },
                    "code": {
                        "enum": [
                            "invalid",
                            "null"
                        ],
                        "type": "string",
                        "description": "* `invalid` - invalid\n* `null` - null"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsTicketsMetaUpdateSocialsNetworkErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "socials.network"
                        ],
                        "type": "string",
                        "description": "* `socials.network` - socials.network"
                    },
                    "code": {
                        "enum": [
                            "invalid_choice",
                            "null",
                            "required"
                        ],
                        "type": "string",
                        "description": "* `invalid_choice` - invalid_choice\n* `null` - null\n* `required` - required"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsTicketsMetaUpdateSocialsNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "socials.non_field_errors"
                        ],
                        "type": "string",
                        "description": "* `socials.non_field_errors` - socials.non_field_errors"
                    },
                    "code": {
                        "enum": [
                            "invalid",
                            "null",
                            "required"
                        ],
                        "type": "string",
                        "description": "* `invalid` - invalid\n* `null` - null\n* `required` - required"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsTicketsMetaUpdateSocialsValueErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "socials.value"
                        ],
                        "type": "string",
                        "description": "* `socials.value` - socials.value"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsTicketsMetaUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiIpfsTicketsMetaUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ApiIpfsUsersSocialsUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiIpfsUsersSocialsUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsUsersSocialsUpdateNetworkErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsUsersSocialsUpdateValueErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/ApiIpfsUsersSocialsUpdateNonFieldErrorsErrorComponent",
                        "network": "#/components/schemas/ApiIpfsUsersSocialsUpdateNetworkErrorComponent",
                        "value": "#/components/schemas/ApiIpfsUsersSocialsUpdateValueErrorComponent"
                    }
                }
            },
            "ApiIpfsUsersSocialsUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiIpfsUsersSocialsUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/ApiIpfsUsersSocialsUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiIpfsUsersSocialsUpdateNetworkErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "network"
                        ],
                        "type": "string",
                        "description": "* `network` - network"
                    },
                    "code": {
                        "enum": [
                            "invalid_choice",
                            "null",
                            "required"
                        ],
                        "type": "string",
                        "description": "* `invalid_choice` - invalid_choice\n* `null` - null\n* `required` - required"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsUsersSocialsUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "non_field_errors"
                        ],
                        "type": "string",
                        "description": "* `non_field_errors` - non_field_errors"
                    },
                    "code": {
                        "enum": [
                            "invalid",
                            "null"
                        ],
                        "type": "string",
                        "description": "* `invalid` - invalid\n* `null` - null"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsUsersSocialsUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiIpfsUsersSocialsUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ApiIpfsUsersSocialsUpdateValueErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "value"
                        ],
                        "type": "string",
                        "description": "* `value` - value"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiNotificationsListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiNotificationsRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiNotificationsSeenCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiNotificationsSeenCreateNonFieldErrorsErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/ApiNotificationsSeenCreateNonFieldErrorsErrorComponent"
                    }
                }
            },
            "ApiNotificationsSeenCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiNotificationsSeenCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/ApiNotificationsSeenCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiNotificationsSeenCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "non_field_errors"
                        ],
                        "type": "string",
                        "description": "* `non_field_errors` - non_field_errors"
                    },
                    "code": {
                        "enum": [
                            "invalid",
                            "null"
                        ],
                        "type": "string",
                        "description": "* `invalid` - invalid\n* `null` - null"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiNotificationsSeenCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiNotificationsSeenCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ApiPlacesListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiPlacesRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiUsersCurrentRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiUsersStaffListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ClientErrorEnum": {
                "enum": [
                    "client_error"
                ],
                "type": "string",
                "description": "* `client_error` - Client Error"
            },
            "Creator": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "maxLength": 42
                    }
                },
                "required": [
                    "address"
                ]
            },
            "CreatorEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string"
                    },
                    "place": {
                        "$ref": "#/components/schemas/EventPlace"
                    },
                    "ticketPrice": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "daysAmount": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "imageUrl": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "website": {
                        "type": "string"
                    },
                    "startDateTimestamp": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "ticketsBought": {
                        "type": "integer",
                        "nullable": true
                    },
                    "ticketsRequiredUntilCancel": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "cancelDateTimestamp": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "cancelDateTimestamp",
                    "creator",
                    "daysAmount",
                    "description",
                    "id",
                    "place",
                    "startDateTimestamp",
                    "ticketPrice",
                    "ticketsBought",
                    "ticketsRequiredUntilCancel",
                    "title",
                    "website"
                ]
            },
            "CurrentUser": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "readOnly": true
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "tickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ticket"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "address",
                    "role",
                    "tickets"
                ]
            },
            "Error401": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode401Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error404": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode404Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error405": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode405Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error406": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode406Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error415": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode415Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error500": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode500Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ErrorCode401Enum": {
                "enum": [
                    "authentication_failed",
                    "not_authenticated"
                ],
                "type": "string",
                "description": "* `authentication_failed` - Authentication Failed\n* `not_authenticated` - Not Authenticated"
            },
            "ErrorCode404Enum": {
                "enum": [
                    "not_found"
                ],
                "type": "string",
                "description": "* `not_found` - Not Found"
            },
            "ErrorCode405Enum": {
                "enum": [
                    "method_not_allowed"
                ],
                "type": "string",
                "description": "* `method_not_allowed` - Method Not Allowed"
            },
            "ErrorCode406Enum": {
                "enum": [
                    "not_acceptable"
                ],
                "type": "string",
                "description": "* `not_acceptable` - Not Acceptable"
            },
            "ErrorCode415Enum": {
                "enum": [
                    "unsupported_media_type"
                ],
                "type": "string",
                "description": "* `unsupported_media_type` - Unsupported Media Type"
            },
            "ErrorCode500Enum": {
                "enum": [
                    "error"
                ],
                "type": "string",
                "description": "* `error` - Error"
            },
            "ErrorResponse401": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error401"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse404": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error404"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse405": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error405"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse406": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error406"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse415": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error415"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse500": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ServerErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error500"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "EventPlace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "maxTickets": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "minTickets": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "minPrice": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "minDays": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "locationUrl": {
                        "type": "string"
                    },
                    "daysBeforeCancel": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "available": {
                        "type": "boolean"
                    },
                    "isUsed": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "daysBeforeCancel",
                    "id",
                    "isUsed",
                    "locationUrl",
                    "maxTickets",
                    "minDays",
                    "minPrice",
                    "minTickets",
                    "title"
                ]
            },
            "NetworkEnum": {
                "enum": [
                    "telegram",
                    "instagram",
                    "discord",
                    "whatsapp"
                ],
                "type": "string",
                "description": "* `telegram` - Telegram\n* `instagram` - Instagram\n* `discord` - Discord\n* `whatsapp` - Whatsapp"
            },
            "Notification": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "body": {
                        "type": "string",
                        "readOnly": true
                    },
                    "seenAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "createdAtTimestamp": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "body",
                    "createdAtTimestamp",
                    "id",
                    "seenAt",
                    "title"
                ]
            },
            "ParseError": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ParseErrorCodeEnum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ParseErrorCodeEnum": {
                "enum": [
                    "parse_error"
                ],
                "type": "string",
                "description": "* `parse_error` - Parse Error"
            },
            "ParseErrorResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParseError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "RoleBasedEvent": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CreatorEvent"
                    },
                    {
                        "$ref": "#/components/schemas/StaffEvent"
                    }
                ]
            },
            "RoleEnum": {
                "enum": [
                    "customer",
                    "staff",
                    "creator",
                    "master"
                ],
                "type": "string",
                "description": "* `customer` - Customer\n* `staff` - Staff\n* `creator` - Creator\n* `master` - Master"
            },
            "SIWELogin": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "chain_id": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "expiration_time": {
                        "type": "string"
                    },
                    "invalid_before": {
                        "type": "string"
                    },
                    "issued_at": {
                        "type": "string"
                    },
                    "nonce": {
                        "type": "string"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "statement": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "address",
                    "chain_id",
                    "domain",
                    "expiration_time",
                    "invalid_before",
                    "issued_at",
                    "nonce",
                    "resources",
                    "statement",
                    "uri",
                    "version"
                ]
            },
            "SIWEModelRequest": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "minLength": 1
                    },
                    "chain_id": {
                        "type": "string",
                        "minLength": 1
                    },
                    "domain": {
                        "type": "string",
                        "minLength": 1
                    },
                    "expiration_time": {
                        "type": "string",
                        "minLength": 1
                    },
                    "invalid_before": {
                        "type": "string",
                        "minLength": 1
                    },
                    "issued_at": {
                        "type": "string",
                        "minLength": 1
                    },
                    "nonce": {
                        "type": "string",
                        "minLength": 1
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "statement": {
                        "type": "string",
                        "minLength": 1
                    },
                    "uri": {
                        "type": "string",
                        "minLength": 1
                    },
                    "version": {
                        "type": "string",
                        "minLength": 1
                    },
                    "signature": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Message signed with user's private key"
                    }
                },
                "required": [
                    "address",
                    "chain_id",
                    "domain",
                    "expiration_time",
                    "invalid_before",
                    "issued_at",
                    "nonce",
                    "resources",
                    "signature",
                    "statement",
                    "uri",
                    "version"
                ]
            },
            "ServerErrorEnum": {
                "enum": [
                    "server_error"
                ],
                "type": "string",
                "description": "* `server_error` - Server Error"
            },
            "Staff": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "address"
                ]
            },
            "StaffEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string"
                    },
                    "place": {
                        "$ref": "#/components/schemas/EventPlace"
                    },
                    "ticketPrice": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "daysAmount": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "imageUrl": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "website": {
                        "type": "string"
                    },
                    "startDateTimestamp": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "ticketsBought": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "ticketsRequiredUntilCancel": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "cancelDateTimestamp": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "cancelDateTimestamp",
                    "creator",
                    "daysAmount",
                    "description",
                    "id",
                    "place",
                    "startDateTimestamp",
                    "ticketPrice",
                    "ticketsBought",
                    "ticketsRequiredUntilCancel",
                    "title",
                    "website"
                ]
            },
            "StatusEnum": {
                "enum": [
                    "submitted",
                    "approved",
                    "declined",
                    "cancelled",
                    "closed"
                ],
                "type": "string",
                "description": "* `submitted` - submitted\n* `approved` - approved\n* `declined` - declined\n* `cancelled` - cancelled\n* `closed` - closed"
            },
            "Ticket": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "eventId": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "isRedeemed": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "eventId",
                    "id",
                    "isRedeemed"
                ]
            },
            "UploadEventMetaToIpfsRequest": {
                "type": "object",
                "properties": {
                    "cover": {
                        "type": "string",
                        "format": "binary"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1
                    },
                    "website": {
                        "type": "string",
                        "minLength": 1
                    },
                    "socialsCid": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "cover",
                    "description",
                    "socialsCid",
                    "title",
                    "website"
                ]
            },
            "UploadPlaceMetaToIpfsRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "locationUrl": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "locationUrl",
                    "title"
                ]
            },
            "UploadSocialsRequest": {
                "type": "object",
                "properties": {
                    "network": {
                        "$ref": "#/components/schemas/NetworkEnum"
                    },
                    "value": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "network",
                    "value"
                ]
            },
            "UploadTicketMetaToIpfsRequest": {
                "type": "object",
                "properties": {
                    "socials": {
                        "$ref": "#/components/schemas/UploadSocialsRequest"
                    },
                    "eventid": {
                        "type": "integer"
                    }
                },
                "required": [
                    "eventid",
                    "socials"
                ]
            },
            "ValidationErrorEnum": {
                "enum": [
                    "validation_error"
                ],
                "type": "string",
                "description": "* `validation_error` - Validation Error"
            }
        },
        "securitySchemes": {
            "cookieJWTAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "access_token",
                "description": "JSON Web Token authentication via cookie"
            }
        }
    }
}
