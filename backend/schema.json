{
    "openapi": "3.0.3",
    "info": {
        "title": "Cyber Valley Tickets API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/web3/login/": {
            "get": {
                "operationId": "api_auth_web3_login_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "html",
                                "json"
                            ]
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAuthWeb3LoginRetrieveErrorResponse400"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAuthWeb3LoginRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "api_auth_web3_login_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "html",
                                "json"
                            ]
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateErrorResponse400"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAuthWeb3LoginCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/events/": {
            "get": {
                "operationId": "api_events_list",
                "description": "Available events in the syste",
                "tags": [
                    "api"
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiEventsListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoleBasedEvent"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/events/{id}/": {
            "get": {
                "operationId": "api_events_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this event.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiEventsRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatorEvent"
                                },
                                "examples": {
                                    "Default": {}
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/ipfs/events/meta": {
            "put": {
                "operationId": "api_ipfs_events_meta_update",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadEventMetaToIpfsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cid": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "IPFS CID of stored data"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/notifications/": {
            "get": {
                "operationId": "api_notifications_list",
                "tags": [
                    "api"
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Notification"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/notifications/{id}/": {
            "get": {
                "operationId": "api_notifications_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/notifications/seen/{notification_id}/": {
            "post": {
                "operationId": "api_notifications_seen_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "notificationId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsSeenCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/places/": {
            "get": {
                "operationId": "api_places_list",
                "tags": [
                    "api"
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiPlacesListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EventPlace"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/places/{id}/": {
            "get": {
                "operationId": "api_places_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer",
                            "maximum": 9223372036854775807,
                            "minimum": -9223372036854775808,
                            "format": "int64"
                        },
                        "description": "A unique value identifying this event place.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiPlacesRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventPlace"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/token/refresh/": {
            "post": {
                "operationId": "api_token_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiTokenRefreshCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/current/": {
            "get": {
                "operationId": "api_users_current_retrieve",
                "tags": [
                    "api"
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiUsersCurrentRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApiAuthWeb3LoginCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiAuthWeb3LoginRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiEventsListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiEventsRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiIpfsEventsMetaUpdateCoverErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "cover"
                        ],
                        "type": "string",
                        "description": "* `cover` - cover"
                    },
                    "code": {
                        "enum": [
                            "empty",
                            "invalid",
                            "no_name",
                            "null",
                            "required"
                        ],
                        "type": "string",
                        "description": "* `empty` - empty\n* `invalid` - invalid\n* `no_name` - no_name\n* `null` - null\n* `required` - required"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsEventsMetaUpdateDescriptionErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "description"
                        ],
                        "type": "string",
                        "description": "* `description` - description"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsEventsMetaUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateCoverErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateTitleErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateDescriptionErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/ApiIpfsEventsMetaUpdateNonFieldErrorsErrorComponent",
                        "cover": "#/components/schemas/ApiIpfsEventsMetaUpdateCoverErrorComponent",
                        "title": "#/components/schemas/ApiIpfsEventsMetaUpdateTitleErrorComponent",
                        "description": "#/components/schemas/ApiIpfsEventsMetaUpdateDescriptionErrorComponent"
                    }
                }
            },
            "ApiIpfsEventsMetaUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/ApiIpfsEventsMetaUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiIpfsEventsMetaUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "non_field_errors"
                        ],
                        "type": "string",
                        "description": "* `non_field_errors` - non_field_errors"
                    },
                    "code": {
                        "enum": [
                            "invalid",
                            "null"
                        ],
                        "type": "string",
                        "description": "* `invalid` - invalid\n* `null` - null"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsEventsMetaUpdateTitleErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "title"
                        ],
                        "type": "string",
                        "description": "* `title` - title"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiIpfsEventsMetaUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiIpfsEventsMetaUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ApiNotificationsListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiNotificationsRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiNotificationsSeenCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiNotificationsSeenCreateNonFieldErrorsErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/ApiNotificationsSeenCreateNonFieldErrorsErrorComponent"
                    }
                }
            },
            "ApiNotificationsSeenCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiNotificationsSeenCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/ApiNotificationsSeenCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiNotificationsSeenCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "non_field_errors"
                        ],
                        "type": "string",
                        "description": "* `non_field_errors` - non_field_errors"
                    },
                    "code": {
                        "enum": [
                            "invalid",
                            "null"
                        ],
                        "type": "string",
                        "description": "* `invalid` - invalid\n* `null` - null"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiNotificationsSeenCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiNotificationsSeenCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ApiPlacesListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiPlacesRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiTokenRefreshCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiTokenRefreshCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ApiTokenRefreshCreateRefreshErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/ApiTokenRefreshCreateNonFieldErrorsErrorComponent",
                        "refresh": "#/components/schemas/ApiTokenRefreshCreateRefreshErrorComponent"
                    }
                }
            },
            "ApiTokenRefreshCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ApiTokenRefreshCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/ApiTokenRefreshCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ApiTokenRefreshCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "non_field_errors"
                        ],
                        "type": "string",
                        "description": "* `non_field_errors` - non_field_errors"
                    },
                    "code": {
                        "enum": [
                            "invalid",
                            "no_active_account",
                            "null"
                        ],
                        "type": "string",
                        "description": "* `invalid` - invalid\n* `no_active_account` - no_active_account\n* `null` - null"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiTokenRefreshCreateRefreshErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "enum": [
                            "refresh"
                        ],
                        "type": "string",
                        "description": "* `refresh` - refresh"
                    },
                    "code": {
                        "enum": [
                            "blank",
                            "invalid",
                            "null",
                            "null_characters_not_allowed",
                            "required",
                            "surrogate_characters_not_allowed"
                        ],
                        "type": "string",
                        "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ApiTokenRefreshCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiTokenRefreshCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ApiUsersCurrentRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ClientErrorEnum": {
                "enum": [
                    "client_error"
                ],
                "type": "string",
                "description": "* `client_error` - Client Error"
            },
            "Creator": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "maxLength": 42
                    }
                },
                "required": [
                    "address"
                ]
            },
            "CreatorEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string"
                    },
                    "place": {
                        "$ref": "#/components/schemas/EventPlace"
                    },
                    "ticketPrice": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "daysAmount": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "imageUrl": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "startDateTimestamp": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "ticketsBought": {
                        "type": "integer",
                        "nullable": true
                    },
                    "cancelDateTimestamp": {
                        "type": "integer",
                        "nullable": true
                    },
                    "ticketsRequiredUntilCancel": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "cancelDateTimestamp",
                    "creator",
                    "daysAmount",
                    "description",
                    "id",
                    "place",
                    "startDateTimestamp",
                    "ticketPrice",
                    "ticketsBought",
                    "ticketsRequiredUntilCancel",
                    "title"
                ]
            },
            "CurrentUser": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "readOnly": true
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "tickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ticket"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "address",
                    "role",
                    "tickets"
                ]
            },
            "Error404": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode404Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error405": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode405Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error406": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode406Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error415": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode415Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error500": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode500Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ErrorCode404Enum": {
                "enum": [
                    "not_found"
                ],
                "type": "string",
                "description": "* `not_found` - Not Found"
            },
            "ErrorCode405Enum": {
                "enum": [
                    "method_not_allowed"
                ],
                "type": "string",
                "description": "* `method_not_allowed` - Method Not Allowed"
            },
            "ErrorCode406Enum": {
                "enum": [
                    "not_acceptable"
                ],
                "type": "string",
                "description": "* `not_acceptable` - Not Acceptable"
            },
            "ErrorCode415Enum": {
                "enum": [
                    "unsupported_media_type"
                ],
                "type": "string",
                "description": "* `unsupported_media_type` - Unsupported Media Type"
            },
            "ErrorCode500Enum": {
                "enum": [
                    "error"
                ],
                "type": "string",
                "description": "* `error` - Error"
            },
            "ErrorResponse404": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error404"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse405": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error405"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse406": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error406"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse415": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error415"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse500": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ServerErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error500"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "EventPlace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "maxTickets": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "minTickets": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "minPrice": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "minDays": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "daysBeforeCancel": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "available": {
                        "type": "boolean"
                    },
                    "isUsed": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "daysBeforeCancel",
                    "id",
                    "isUsed",
                    "maxTickets",
                    "minDays",
                    "minPrice",
                    "minTickets",
                    "title"
                ]
            },
            "Notification": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "body": {
                        "type": "string",
                        "readOnly": true
                    },
                    "seenAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "body",
                    "createdAt",
                    "id",
                    "seenAt",
                    "title"
                ]
            },
            "ParseError": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ParseErrorCodeEnum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ParseErrorCodeEnum": {
                "enum": [
                    "parse_error"
                ],
                "type": "string",
                "description": "* `parse_error` - Parse Error"
            },
            "ParseErrorResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParseError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "RoleBasedEvent": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CreatorEvent"
                    },
                    {
                        "$ref": "#/components/schemas/StaffEvent"
                    }
                ]
            },
            "RoleEnum": {
                "enum": [
                    "customer",
                    "staff",
                    "creator",
                    "master"
                ],
                "type": "string",
                "description": "* `customer` - Customer\n* `staff` - Staff\n* `creator` - Creator\n* `master` - Master"
            },
            "ServerErrorEnum": {
                "enum": [
                    "server_error"
                ],
                "type": "string",
                "description": "* `server_error` - Server Error"
            },
            "StaffEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string"
                    },
                    "place": {
                        "$ref": "#/components/schemas/EventPlace"
                    },
                    "ticketPrice": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "daysAmount": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "imageUrl": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "startDateTimestamp": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "ticketsBought": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "cancelDateTimestamp": {
                        "type": "integer"
                    },
                    "ticketsRequiredUntilCancel": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "cancelDateTimestamp",
                    "creator",
                    "daysAmount",
                    "description",
                    "id",
                    "place",
                    "startDateTimestamp",
                    "ticketPrice",
                    "ticketsBought",
                    "ticketsRequiredUntilCancel",
                    "title"
                ]
            },
            "StatusEnum": {
                "enum": [
                    "submitted",
                    "approved",
                    "declined",
                    "cancelled",
                    "closed"
                ],
                "type": "string",
                "description": "* `submitted` - submitted\n* `approved` - approved\n* `declined` - declined\n* `cancelled` - cancelled\n* `closed` - closed"
            },
            "Ticket": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "eventId": {
                        "type": "integer"
                    },
                    "isRedeemed": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "eventId",
                    "id",
                    "isRedeemed"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access"
                ]
            },
            "TokenRefreshRequest": {
                "type": "object",
                "properties": {
                    "refresh": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    }
                },
                "required": [
                    "refresh"
                ]
            },
            "UploadEventMetaToIpfsRequest": {
                "type": "object",
                "properties": {
                    "cover": {
                        "type": "string",
                        "format": "binary"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "cover",
                    "description",
                    "title"
                ]
            },
            "ValidationErrorEnum": {
                "enum": [
                    "validation_error"
                ],
                "type": "string",
                "description": "* `validation_error` - Validation Error"
            }
        }
    }
}
